name: Build Go Modules
run-name: Prober CI
on:
  push:
    tags:
      - "*"
  pull_request:
    types: [labeled]
  workflow_dispatch:
    
jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm, arm64]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version: '1.20'
      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
          IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          if [ $GOOS = "windows" ]; then export BINARY_SUFFIX="$BINARY_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export BINARY_NAME=maimaidx-prober-proxy-$GOOS"-$GOARCH-"
          export CGO_ENABLED=0
          if $IS_TAG
          then
            go build -ldflags "-X main.version=$TAG_NAME" -o "output/$BINARY_NAME$TAG_NAME$BINARY_SUFFIX" -trimpath ./proxy/cmd/maimaidx-prober-proxy/
          else
            go build -o "output/$BINARY_NAME$BINARY_SUFFIX" -trimpath ./proxy/cmd/maimaidx-prober-proxy/
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ !github.head_ref }}
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: output/